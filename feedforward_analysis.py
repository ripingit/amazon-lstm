#analyzes the vectors generated by doc2vec using a feed-forward neural network

import IPython
import numpy as np
import tensorflow as tf
from keras.models import Sequential
from keras.layers import Dropout, Dense, Activation

x_train = np.load("x_train_vectors.npy")
x_test  = np.load("x_test_vectors.npy")
y_train = np.load("y_train.npy")
y_test  = np.load("y_test.npy")

#the actual model
model = Sequential()

model.add(Dense(64, input_dim = 150, activation = 'relu'))
model.add(Dropout(0.5))
model.add(Dense(64, activation = 'relu'))
model.add(Dropout(0.5))
model.add(Dense(1, activation = 'sigmoid'))

model.compile(optimizer = "adam", loss = "binary_crossentropy", metrics = ["accuracy"])

model.fit(x_train, y_train, epochs=15, validation_split = 0.5, batch_size=128)

score = model.evaluate(x_test, y_test, batch_size = 128)

print(score)

#IPython.embed()